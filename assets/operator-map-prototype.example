Observable.prototype.map = function map(project) {
  const source = this;
  return new Observable((observer) => {
    const mapObserver = {
      next: (x) => observer.next(project(x)),
      error: (err) => observer.error(err),
      complete: () => observer.complete()
    };
    return source.subscribe(mapObserver);
  });
};

const myDBObservable = new Observable(observer => {
  const ds = new CreateDatabaseConnection();
  ds.ondata = (x) => observer.next(x);
  ds.onerror = (err) => observer.error(err);
  ds.oncomplete = () => observer.complete();
  return () => {
    ds.disconnectAndDestroy();
  };
});

const observer = x => console.log(x);

const subscription = myDBObservable
  .map(x => x * 5)
  .subscribe(observer);

setTimeout(
  () => subscription.unsubscribe(),
  5000
);
